*See if we can setup remote powershell*


#Install script dependancies
 Set-ExecutionPolicy RemoteSigned ; Install-Module PSWindowsUpdate ;
Import-Module PSWindowsUpdate ; 

#Update windows update cache
Get-Service -Name wuauserv,bits,cryptsvc | Stop-Service ; Remove-Item -Path "$env:ALLUSERSPROFILE\Application Data\Microsoft\Network\Downloader\qmgr*.dat" ; Get-Service -Name wuauserv,bits,cryptsvc | Start-Service

#List optional windows updates
get-wulist -criteria "isinstalled=0 and deploymentaction=*"

#Install optional windows updates
Install-WindowsUpdate -criteria "isinstalled=0 and deploymentaction=*" -AutoReboot

#gpupdate and windows update w/autoreboot (without PSWindows update installed)
gpupdate /force ; Set-ExecutionPolicy RemoteSigned ; Install-Module PSWindowsUpdate ; Import-Module PSWindowsUpdate ; Install-WindowsUpdate -AcceptAll -Autoreboot

#gpupdate and windows update w/autoreboot (with PSWindows update installed)
gpupdate /force ; Install-WindowsUpdate -AcceptAll -Autoreboot

#Clear recycle bin, clear cache files, remove temp files
Clear-RecycleBin ; Clear-BCCache ; Remove-Item -Path $env:TEMP -Recurse -Force -ErrorAction SilentlyContinue

#Network Stats script
echo ***YOUR-HOSTNAME*** ; hostname ; echo ***NetworkAdapterStats*** ;
Get-NetAdapterStatistics ; echo ***MACAddresses*** ; getmac /v ; echo ***IPConfiguration*** ; ipconfig ; echo ***PingingGoogle.com*** ; ping google.com ;
echo ***NetworkStatistics*** ; netstat -e
; echo ***Printers*** ; Get-Printer | Out-Default ; echo ***RunningSpeedtest***
; C:\Users\Administrator\Downloads\ookla-speedtest-1.0.0-win64\speedtest

#Disk Stats Script and run chkdsk /scan
Get-Disk ; Get-Partition ; Get-PhysicalDiskStorageNodeView ; chkdsk /scan  

#Display processes with at leat 40mb
Get-Process | Where-Object {$_.WorkingSet -gt 40000000}  

#Security stats/script
Update-MpSignature ; echo ***UPDATED-ANTIMALWARE-DEFINITIONS*** ; Start-MpScan -ScanType QuickScan ; echo ***SCAN-COMPLETED*** ; Get-MpComputerStatus ; Get-MpThreat ; Get-MpThreatDetection ;   

#List devices
gwmi Win32_PnPSignedDriver | select devicename,driverversion
gwmi Win32_SystemDriver | select name,@{n="version";e={(gi $_.pathname).VersionInfo.FileVersion}}

#List bios information
Get-WmiObject -Class Win32_Bios | Format-List -Property *




#Display active services 
Get-Service | Where-Object {$_.Status -eq "Running"}

#List recent events on local PC
Get-EventLog -LogName System -Newest 30


#########ACTIVE DIRECTORY COMMANDS######
#Display Basic Domain Information
Get-ADDomain

#Get All Active Directory Users in Domain
Get-ADUser -Filter *

#Get AD Users by Name
get-Aduser -Filter {name -like "*robert*"}

#Find All Locked User Accounts
Search-ADAccount -LockedOut

#List all Disabled User Accounts
Search-ADAccount -AccountDisabled

#Unlock User Account
Unlock-ADAccount â€“Identity john.smith

#Force Password Change at Next Login
Set-ADUser -Identity username -ChangePasswordAtLogon $true

#Change a specified user's password
Set-ADAccountPassword -Identity elisada -OldPassword (ConvertTo-SecureString -AsPlainText "p@ssw0rd" -Force) -NewPassword (ConvertTo-SecureString -AsPlainText "qwert@12345" -Force)

#Change a specified user's password and force pw change at login
Set-ADAccountPassword -Identity elisada -OldPassword (ConvertTo-SecureString
-AsPlainText "p@ssw0rd" -Force) -NewPassword (ConvertTo-SecureString
-AsPlainText "qwert@12345" -Force) ; Set-ADUser -Identity username -ChangePasswordAtLogon $true


##############################################

###PC MEGA MAINTANENCE SCRIPT###